C51 COMPILER V9.60.0.0   MAIN                                                              05/04/2020 21:25:14 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          /*
   2          //Trevor Scott
   3          //CECS 262 F @8:00am
   4          //Project: Music
   5          #include <reg51.h>
   6          //this was for a delay Ineeded to get the respected 1/16,  or .2s delay
   7          #include <intrins.h> // for _nop_()
   8          
   9          #define uchar unsigned char
  10          #define uint unsigned int
  11          
  12          //my button
  13          sbit sw1=P0^0;
  14          sbit sw2=P0^1;
  15          sbit sw3=P0^2;
  16          sbit sw4=P0^3;
  17          sbit sw5=P0^4;
  18          sbit btn=P3^2;
  19          sbit Buzzer=P3^7;
  20          bit flag=1;
  21          
  22          //this means that when reset it resets these values, keyword VOLATILE, it can work without but i figured t
             -o use it
  23          volatile uchar th0, tl0;
  24          uchar tl0, th0;
  25          
  26          
  27          //prototypes
  28          void delay();
  29          void delay_us(uchar n_usec);
  30          void delay_ms(uchar n_msec) ;
  31          
  32          //my struct for music
  33          struct music_type {
  34            uchar tone;
  35            uchar delay;
  36          };
  37          
  38          void playSong(struct music_type notetab[]);
  39          
  40          //the keynotes
  41          uint code tonetab_C[]= {62018,62401,62743,62903,63185,63441,63670,
  42          63777,63969,64140,64216,64360,64489,64603,
  43          64655,64751,64837,64876,64948,65012,65070};
  44          
  45          //defns
  46          #define C 1+7
  47          #define D 2+7
  48          #define E 3+7
  49          #define F 4+7
  50          #define G 5+7
  51          #define A 6+7
  52          #define B 7+7
  53          #define C5 1+14
C51 COMPILER V9.60.0.0   MAIN                                                              05/04/2020 21:25:14 PAGE 2   

  54          
  55          //for mary had a little lamb, and the gaps betweeb are for the delay such 1/16, 1.8, etc. 
  56          //also 2nd 48
  57          struct music_type code mary[]={
  58            E,0x04,D,0x04,C,0x04,D,0x04,E,0x04,E,0x04,E,0x08,
  59            D,0x04,D,0x04,D,0x08,E,0x04,G,0x04,G,0x08,
  60            E,0x04,D,0x04,C,0x04,D,0x04,E,0x04,E,0x04,E,0x08,
  61            D,0x04,D,0x04,E,0x04,D,0x04,C,0x012,0,0
  62          };
  63          
  64          //happybirthday song
  65          //3rd 54
  66          struct music_type code bday[]= {
  67            C,0x02, C,0x01,D,0x04,C,0x04,F,0x04,E,0x08,C,0x03,
  68            C,0x01,D,0x04,C,0x04,G,0x04,F,0x08,C,0x03,C,0x01,
  69            C,0x04,A,0x04,F,0x04,E,0x04,D,0x04,B,0x03,B,0x01,
  70            A,0x04,F,0x04,1,0,G,0x04,F,0x12,0,0
  71          };
  72          
  73          //twinkle and largest 4th  of the index
  74          //86
  75          struct music_type code twinkle[]={
  76            C,0x04,C,0x04,G,0x04,G,0x04,A,0x04,A,0x04,G,0x08,
  77            F,0x04,F,0x04,E,0x04,E,0x04,D,0x04,D,0x04,C,0x08,
  78            G,0x04,G,0x04,F,0x04,F,0x04,E,0x04,E,0x04,D,0x08,
  79            G,0x04,G,0x04,F,0x04,F,0x04,E,0x04,E,0x04,D,0x08,
  80            C,0x04,C,0x04,G,0x04,G,0x04,A,0x04,A,0x04,G,0x08,
  81            F,0x04,F,0x04,E,0x04,E,0x04,D,0x04,D,0x04,C,0x04,
  82            0,0};
  83          
  84            //jingle and smallest 1st of the index
  85            //48 size
  86          struct music_type code jingle[]={
  87            E,0x02,E,0x02,E,0x04,E,0x02,E,0x02,E,0x04,
  88            E,0x02,G,0x02,C,0x02,D,0x02,E,0x08,
  89            F,0x02,F,0x02,F,0x04,F,0x02,E,0x02,E,0x04,
  90            E,0x02,D,0x02,D,0x02,E,0x02,D,0x04,G,0x04,0,0
  91          };
  92          //my song and it sounds terrible 
  93          struct music_type code mySong[]={
  94            E,0x04,D,0x04,B,0x03,B,0x01,C,0x04,C,0x04,G,0x04,G,0x04,A,0x04,A,0x04,G,0x08,
  95            E,0x08,D,0x04,D,0x04,E,0x04,D,0x04,C,0x012,0,0
  96          };
  97          //my main file
  98          void main(void) {
  99            
 100            //timers are not needed but they do eliminate a pitch noise in the speakers. 
 101            
 102            TMOD = 0x01; // use timer0 mode 1 to generate tone.
 103            IE = 0x83; // enable timer0 overflow interrupt and interrupts
 104            TCON = 01; // enables IT0 for ex0
 105            while (1) {
 106              flag=1;
 107              if (sw1) 
 108                while (flag)
 109                  playSong(mary);
 110              else if (sw2) 
 111                while (flag)
 112                  playSong(twinkle);
 113              else if (sw3) 
 114                while (flag)
 115                  playSong(bday);
C51 COMPILER V9.60.0.0   MAIN                                                              05/04/2020 21:25:14 PAGE 3   

 116              else if (sw4) 
 117                while (flag)
 118                  playSong(jingle);
 119              else if (sw5) 
 120                while (flag)
 121                  playSong(mySong);
 122              else TR0=0; // play no song
 123            }
 124          }
 125          void ex0(void) interrupt 0{
 126            //when a logic 0 then perform this
 127              flag=0;
 128            
 129          }
 130          //got this from online so that I can control my delays
 131          void delay_us(uint n_usec)
 132          {
 133            do 
 134            {
 135              _nop_();
 136              _nop_();
 137              _nop_();
 138              _nop_();
 139              _nop_();
 140            } while (--n_usec);
 141          }
 142          void delay_ms(uint n_msec)   
 143          {
 144            do
 145              delay_us(131);
 146            while (--n_msec); 
 147          }
 148          //for speaker
 149          void T0_ISR(void) interrupt 1  // timer0 interrupt service routine
 150          {
 151            TR0=0;
 152            Buzzer = !Buzzer;
 153            TH0=th0;
 154            TL0=tl0;
 155            TR0=1;
 156          }
 157          //this is how I play a song
 158          void playSong(struct music_type notetab[]) {
 159            uchar i, j;
 160            i=0;
 161            
 162            while (notetab[i].delay && flag) {
 163              if (!notetab[i].tone) 
 164                TR0 = 0; // stop tone, turn off timer0
 165              else {
 166                th0=TH0=tonetab_C[notetab[i].tone-1]>>8; // get higher 8-bit of the initial value // alt method th0=TH0
             -=tonetab[i]/256
 167                tl0=TL0=tonetab_C[notetab[i].tone-1]; // get lower 8-bit of the initial value // alt method tl0=TL0=ton
             -etab[i]/%256
 168                TR0=1;
 169              }
 170             // provide duration for each tone
 171             for (j=0;j<notetab[i].delay;j++)
 172               delay_ms(80); // minimum delay unit for 1/16 // was 80
 173             i++;
 174            }
 175            TR0=0;  // stop between songs for about 0.2s
C51 COMPILER V9.60.0.0   MAIN                                                              05/04/2020 21:25:14 PAGE 4   

 176            delay_ms(200);
 177          }
 178          */
 179          
 180          #include<reg51.h>
 181          
 182          #define NSr 0x08
 183          #define NSy 0x10
 184          #define NSg 0x20
 185          
 186          #define EWr 0x01
 187          #define EWy 0x02
 188          #define EWg 0x04
 189          
 190          #define lights P1
 191          
 192          //time period in seconds
 193          #define gty 6 //used when any light is changing from green to yellow
 194          #define ytr 2 //used when any light is changing from yellow to red
 195          #define rtg 8 //used when any light is changing from red to green
 196          
 197          void delay(int time)
 198          {
 199   1        int i,j;
 200   1        int num = time * 10;
 201   1        for(i=0;i<num;++i)
 202   1          for(j=0;j<1275;++j);
 203   1      }
 204          
 205          void startup()
 206          {
 207   1      lights = (NSg + EWr);//NS starts green & EW starts r
 208   1      }
 209          
 210          void changeLights()
 211          {
 212   1        if(lights == NSg + EWr)
 213   1        {
 214   2          //delay 'gty' seconds
 215   2          delay(gty);
 216   2          lights = (NSy + EWr); //NS turns yellow, EW stays red
 217   2        }
 218   1        if(lights == NSy + EWr)
 219   1        {
 220   2          //delay 'ytr' seconds
 221   2          delay(ytr);
 222   2          lights = (NSr + EWg);
 223   2        }
 224   1        if(lights == NSr + EWg)
 225   1        {
 226   2          //delay 'gty' seconds
 227   2          delay(gty);
 228   2          lights = (NSr + EWy);
 229   2        }
 230   1        if(lights == NSr + EWy)
 231   1        {
 232   2          //delay 'ytr'
 233   2          delay(ytr);
 234   2          lights = NSg + EWr;
 235   2        }
 236   1      }
 237          
C51 COMPILER V9.60.0.0   MAIN                                                              05/04/2020 21:25:14 PAGE 5   

 238          void main()
 239          {
 240   1        int number = 10;
 241   1        while(1)
 242   1        {
 243   2          P1 = 0x00;
 244   2          delay(10);
 245   2          P1 = 0x1F;
 246   2          delay(10);
 247   2          startup();
 248   2          changeLights();
 249   2        } 
 250   1      }
 251          
 252          
 253          
 254          void changeLights()
 255          {
 256   1        if(lights == NSg + EWr)
 257   1        {
 258   2          //delay 'gty' seconds
 259   2          delay(gty);
 260   2          lights = (NSy + EWr); //NS turns yellow, EW stays red
 261   2        
 262   2          //delay 'ytr' seconds
 263   2          delay(ytr);
 264   2          lights = (NSr + EWg);
 265   2      
 266   2          //delay 'gty' seconds
 267   2          delay(gty);
 268   2          lights = (NSr + EWy);
 269   2      
 270   2          //delay 'ytr'
 271   2          delay(ytr);
 272   2          lights = NSg + EWr;
 273   2        }
 274   1        else
 275   1          lights = NSg + EWr;
 276   1      }
*** ERROR C237 IN LINE 276 OF main.c: 'changeLights': function already has a body
 277          
 278          
 279          

C51 COMPILATION COMPLETE.  0 WARNING(S),  1 ERROR(S)
