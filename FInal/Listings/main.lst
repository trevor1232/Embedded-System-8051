C51 COMPILER V9.60.0.0   MAIN                                                              05/14/2020 22:10:44 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //Directive
   2          #include <reg51.h>
   3          
   4          //using simple defn for unsigned char
   5          #define uchar unsigned char
   6          
   7          //time period in seconds
   8          // Defn for green, and yellow, are used when
   9          // lights are changing, e.g. green to yellow, and yellow to red.
  10          #define green  120 
  11          #define yellow  40 
  12          // walking defn is for delay in ms to use for 
  13          // how long someone is able to walk for.
  14          #define walk  20
  15          unsigned char count = 0;
  16          
  17          // The uchar variables are assigned their respected Port Pin,
  18          // so they can be placed in their North|South or East|West wings
  19          uchar EWr = 0x01;
  20          uchar EWy = 0x02;
  21          uchar EWg = 0x04;
  22          uchar NSr = 0x08;
  23          uchar NSy = 0x10;
  24          uchar NSg = 0x20;
  25          
  26          //Will assign a bit for crosswalk of their respected side they will be 
  27          // walking on (people), when a 0 they're simply not walking yet. 
  28          bit crossWalkNS = 0;
  29          bit crossWalkEW = 0;
  30          
  31          //Where the crossLight LED will be emitting it's light at,
  32          //the port pin
  33          sbit crossLight = P2^0;
  34          
  35          //Prototype functions and/or predefinitions that will be used later
  36          // WIll be used for delay
  37          void delay(unsigned char time);
  38          //For enabling interrupts (globally)
  39          void Ext_int_Init();
  40          //for chaning lights simply, green to yellow, or red to green, etc.
  41          void changelights();
  42          
  43          //Main 
  44          void main(void){
  45   1        //Calling functions
  46   1        Ext_int_Init();
  47   1        //Have pre values ready for port 1
  48   1        P1 = EWr+ NSg;
  49   1        while(1){
  50   2          // always having forever changlights function active
  51   2          changelights();
  52   2        }
  53   1      }
  54          
C51 COMPILER V9.60.0.0   MAIN                                                              05/14/2020 22:10:44 PAGE 2   

  55          //The delay needed and intaking the ms time needed for the lights. e.g. 4s, 3s, etc
  56          void delay(unsigned char time){
  57   1        //to use for a loop to know when to stop in miliseconds and having it 
  58   1        // become into delays of seconds (For long periods). Since of the intervals of 50ms it will just use
  59   1        // counter to keep track how many are needed to make the desired seconds.
  60   1      count = 0;
  61   1       for(count=0;count<=time;count++)
  62   1        {
  63   2         TMOD=0x01;  //MODE 1 of timer
  64   2         TH0=0x4B;   // Loading high byte in TH, slows down to 50ms intervals
  65   2         TL0=0xFD;   // Loaded low byte in TL, slows down to 50ms intervals
  66   2         TR0=1;      // Running the timer
  67   2          while(TF0==0);   //for overflow
  68   2         TR0 = 0;      // If TF0=1 stop the timer
  69   2         TF0 = 0;      // Clear the Timer 
  70   2        }
  71   1      }
  72          
  73          
  74          void changelights()
  75          { 
  76   1        //condition statement
  77   1          if(P1 == NSg + EWr)
  78   1          { 
  79   2            crossLight = crossWalkNS;
  80   2            //delay 'gty' seconds
  81   2            delay(green);
  82   2            P1 = (NSy + EWr); //NS turns yellow, EW stays red
  83   2          }
  84   1          else if(P1 == NSy + EWr)
  85   1          {
  86   2            //This will start to toggle the light,
  87   2            // needed for blinking when light is yellow. 
  88   2            if(crossWalkNS){
  89   3            crossLight =~crossLight;
  90   3            delay(10);
  91   3            crossLight =~crossLight;
  92   3            delay(10);
  93   3            crossLight =~crossLight;
  94   3            delay(10);
  95   3            crossLight =~crossLight;
  96   3            delay(10);
  97   3            crossLight =~crossLight;
  98   3            P1 = (NSr + EWg);
  99   3            crossWalkNS = 0;
 100   3            }else{
 101   3              //delay for the color when sitting 
 102   3            delay(yellow);
 103   3            P1 = (NSr + EWg);}
 104   2          }
 105   1          else if(P1 == NSr + EWg)
 106   1          { 
 107   2            crossLight = crossWalkEW;
 108   2            //delay 'gty' seconds
 109   2            delay(green);
 110   2            P1 = (NSr + EWy);
 111   2      
 112   2          }
 113   1          else if(P1 == NSr + EWy)
 114   1          {
 115   2            if(crossWalkEW){
 116   3            crossLight =~crossLight;
C51 COMPILER V9.60.0.0   MAIN                                                              05/14/2020 22:10:44 PAGE 3   

 117   3            delay(10);
 118   3            crossLight =~crossLight;
 119   3            delay(10);
 120   3            crossLight =~crossLight;
 121   3            delay(10);
 122   3            crossLight =~crossLight;
 123   3            delay(10);
 124   3            crossLight =~crossLight;
 125   3            P1 = NSg + EWr;
 126   3            crossWalkEW=0;
 127   3            }else{
 128   3            delay(yellow);
 129   3            P1 = NSg + EWr;}
 130   2          }
 131   1      }
 132          
 133          
 134          void Ext_int_Init()       
 135          {
 136   1        EA  = 1;  /* Enable global interrupt */
 137   1        EX0 = 1;        /* Enable Ext. interrupt0 */
 138   1        IT0 = 1; 
 139   1        IT1=1;
 140   1        EX1=1;/* Select Ext. interrupt0 on falling edge */
 141   1      }
 142          
 143          //For external interrupt to be active for button
 144          // When pressed it will active the crosswalk, and have the lights be ready. 
 145          void walk_EastWest() interrupt 2
 146          {
 147   1        if(P1 == EWr+NSg){
 148   2          count = 100;
 149   2          crossWalkEW=1;
 150   2        }
 151   1      }
 152          
 153          // Needed to have external interrupt for the button
 154          // When pressed it will active the crosswalk, and have the lights be ready. 
 155          void walk_NorthSouth() interrupt 0
 156          {
 157   1        if(P1 == EWg+NSr){
 158   2          count = 100;
 159   2          crossWalkNS=1;
 160   2        }
 161   1      }
 162          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    352    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
